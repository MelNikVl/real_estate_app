version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html:/usr/share/nginx/html
      - ./certs:/etc/nginx/certs
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/tmp/docker.sock:ro

  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: ""
    command: >
      certonly --webroot --webroot-path=/var/www/certbot
      --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email
      -d ${VIRTUAL_HOST}
      --deploy-hook "cp /etc/letsencrypt/live/${VIRTUAL_HOST}/fullchain.pem /etc/letsencrypt/${VIRTUAL_HOST}.crt && cp /etc/letsencrypt/live/${VIRTUAL_HOST}/privkey.pem /etc/letsencrypt/${VIRTUAL_HOST}.key"

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d real_estate_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build: ./backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/real_estate_db
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      VIRTUAL_PORT: 8000
      VIRTUAL_PATH: /api/
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      VIRTUAL_PORT: 80
      VIRTUAL_PATH: /
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
    depends_on:
      - backend

volumes:
  db_data:
